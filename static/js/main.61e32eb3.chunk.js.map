{"version":3,"sources":["components/Header.js","components/About.js","components/Education.js","components/Projects.js","components/Testimonials.js","components/ContactUs.js","components/Footer.js","resumeData.js","components/Experience.js","components/Skills.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","react_markdown","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","address","website","Education","education","UniversityName","specialization","StartDate","EndDate","Location","GPA","Coursework","Projects","work","projects","Date","description","subitem","index","listStyle","fontSize","fontWeight","lineHeight","github","rel","ContactUs","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","_this$state","state","email","message","setState","isLoading","emailjs","send","then","response","isSent","catch","error","console","log","handleNameChange","value","handleEmailChange","handleMessageChange","_this2","_this$state2","type","onClick","onSubmit","htmlFor","onChange","required","Footer","role","linkedinId","CompanyName","Work","skillsDescription","skills","skillname","testimonials","Skills","Experience","App","Header_Header","About_About","Education_Education","Experience_Experience","Projects_Projects","Skills_Experience","components_ContactUs","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61e32eb3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Education</a></li>\n             <li><a className=\"smoothscroll\" href=\"#experience\">Work</a></li>\n               <li><a className=\"smoothscroll\" href=\"#projects\">Projects</a></li>\n               <li><a className=\"smoothscroll\" href=\"#skills\">Skills</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}><ReactMarkdown>{resumeData.roleDescription}</ReactMarkdown>\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"images/ProfilePic2.jpg\" alt=\"\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>{resumeData.website}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Education extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.StartDate}-{item.EndDate}</em></p>\n                          <p>\n                            Location: {item.Location}\n                          </p>\n                          <p>\n                          GPA: {item.GPA}\n                          </p>\n                          <p>\n                            Relevant Coursework: {item.Coursework}\n                          </p>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n        {/* <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                      </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div> */}\n\n         {/* </div> */}\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nexport default  class Projects extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"projects\">\n\n        \n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Projects</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.projects.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.name}</h3>\n                          <p className=\"info\">\n                         \n                          <span>&bull;</span> <em className=\"date\">{item.Date}</em></p>\n                          <p>\n                          <ul>\n                                {item.description.map((subitem, index) => (\n                                    <li key={index} style={{ listStyle: 'disc', color: '#3d3d3d',fontFamily: \"'opensans-regular', sans-serif\",fontSize:\"15px\",fontWeight:\"normal\",lineHeight:\"30px\"}}>\n                                    <ReactMarkdown>{subitem}</ReactMarkdown>\n                                    </li>\n                                ))}\n                                </ul>\n                          </p>\n                          <a\n                        href={item.github} // Add the GitHub repository URL\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"github-link\"\n                      >\n                        <img\n                          src=\"images/github-mark.png\" // Add the path to your GitHub logo image\n                          alt=\"GitHub Logo\"\n                          className=\"github-logo\"\n                        />\n                        View on GitHub\n                      </a>\n\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n        \n\n        \n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React, { Component } from 'react';\nimport emailjs from 'emailjs-com';\n\nclass ContactUs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      isLoading: false,\n      isSent: false,\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, message } = this.state;\n\n    // Display the loading spinner while sending the email\n    this.setState({ isLoading: true });\n\n    // Send email using EmailJS\n    emailjs\n      .send(\n        'service_vz3vf6e', // Replace with your EmailJS service ID\n        'template_7hk7bb4', // Replace with your EmailJS template ID\n        {\n          name: name,\n          email: email,\n          message: message,\n        },\n        'JUd6u_oKyBOd88x_v' // Replace with your EmailJS user ID\n      )\n      .then((response) => {\n        // Email sent successfully\n        this.setState({\n          name: '',\n          email: '',\n          message: '',\n          isLoading: false,\n          isSent: true,\n        });\n      })\n      .catch((error) => {\n        // Error sending email\n        console.log('Error sending email:', error);\n      });\n  };\n\n  handleNameChange = (e) => {\n    this.setState({ name: e.target.value });\n  };\n\n  handleEmailChange = (e) => {\n    this.setState({ email: e.target.value });\n  };\n\n  handleMessageChange = (e) => {\n    this.setState({ message: e.target.value });\n  };\n\n  render() {\n    const { name, email, message, isLoading, isSent } = this.state;\n\n    return (\n      <section id=\"contact\">\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Contact</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {isSent ? (\n              <div className=\"message-sent\">\n                <p>Thank you for contacting. I will get back to you as soon as possible.</p>\n                <button\n                  type=\"button\"\n                  className=\"submit-btn\"\n                  onClick={() => this.setState({ isSent: false })}\n                >\n                  Back\n                </button>\n              </div>\n            ) : (\n              <form onSubmit={this.handleSubmit} className=\"contact-form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"contact-name\">Name:</label>\n                  <input\n                    type=\"text\"\n                    id=\"contact-name\"\n                    value={name}\n                    onChange={this.handleNameChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"contact-email\">Email:</label>\n                  <input\n                    type=\"email\"\n                    id=\"contact-email\"\n                    value={email}\n                    onChange={this.handleEmailChange}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"contact-message\">Message:</label>\n                  <textarea\n                    id=\"contact-message\"\n                    value={message}\n                    onChange={this.handleMessageChange}\n                    required\n                  ></textarea>\n                </div>\n                {isLoading ? (\n                  <div className=\"loading-spinner\"></div>\n                ) : (\n                  <button type=\"submit\" className=\"submit-btn\">\n                    Submit\n                  </button>\n                )}\n              </form>\n            )}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ContactUs;\n","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \n    \"name\": \"Paritosh Sabade\",\n    \"role\": \"Software Engineer\",\n    \"linkedinId\":\"https://www.linkedin.com/in/paritosh-sabade/\",\n    \n    \"roleDescription\": \"I am an aspiring software engineer who believes that coding is like a delicious recipe – a pinch of creativity, a dash of logic, and a spoonful of determination. With a passion for tackling challenges head-on, I'm on a mission to whip up innovative solutions that will leave a lasting impression. So grab a cup of coffee and explore my projects – I promise they'll be more than just bytes and line of code!\",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/paritosh-sabade/\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"https://github.com/ParitoshSabade\",\n          \"className\":\"fa fa-github\"\n        },\n        \n      ],\n    \"aboutme\":\"Hello, I'm Paritosh Sabade, a software developer with a master's degree in Computer Science from Indiana University. I'm passionate about creating innovative solutions and have a strong background in Python, C#, JavaScript, Java, and C++. Currently, I'm a Research Assistant at Indiana University Bloomington, where I've been using Python and C++ in research projects. I've also gained valuable industry experience as a Software Engineer intern at Bloom Insurance, working with C#, .NET, and Entity Framework ORM. Additionally, I interned at SAPL Asia, where I honed my skills in JavaScript, React, and Python, focusing on web development. My commitment to excellence, enthusiasm for learning, and adaptability set me apart. I am driven by a desire to make a positive impact through my work, and I look forward to taking on new challenges in the software development industry. \",\n    \"address\":\"Bloomington, Indiana, USA\",\n    \"website\":\"paritosh.sabade@gmail.com\",\n    \"education\":[\n      {\n        \"UniversityName\":\"Indiana University, Bloomington\",\n        \"specialization\":\"Masters in Computer Science\",\n        \"StartDate\":\"Aug 2021\",\n        \"EndDate\":\"May 2023\",\n        \"Location\":\"Bloomington, Indiana, USA\",\n        \"GPA\":\"3.83/4.0\",\n        \"Coursework\":\"Software Engineering, Artificial Intelligence, Applied Algorithms, Advanced Operating System, Applied Machine Learning, Cloud Computing, Database Design, Graph Analytics.\"\n        \n      },\n      {\n        \"UniversityName\":\"MIT College Of Engineering, Savitribai Phule Pune University\",\n        \"specialization\":\"Bachelor of Engineering, Computer Engineering\",\n        \"StartDate\":\"Aug 2016\",\n        \"EndDate\":\"May 2020\",\n        \"Location\":\"Pune, India\",\n        \"GPA\":\"8.56/10.0\",\n        \"Coursework\":\"Computer Networks, Data Structures, Database Systems, Object Oriented Design and Programming, Operating System, Data mining and Warehousing, Data Analytics.\"\n      }\n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"Indiana University, Bloomington\",\n        \"specialization\":\"Research Assistant\",\n        \"StartDate\":\"June 2023\",\n        \"EndDate\":\"Present\",\n        \"Location\":\"Bloomington, Indiana\",\n        \"Work\":['Explored **PyTorch** and Quiver for distributed graph learning in PyTorch Geometric, enabling efficient scaling across multiple GPUs and CPUs.', 'Developed optimized **C++** code utilizing Quiver to enhance the performance of PyTorch for specific tasks, improving its efficiency and effectiveness.', 'Created a **Python** wrapper that facilitates the execution of **graph neural networks** within the C++ code, enabling seamless integration and utilization of the enhanced PyTorch functionality.'],\n      },\n      {\n        \"CompanyName\":\"Bloom Insurance\",\n        \"specialization\":\"Software Engineer Intern\",\n        \"StartDate\":\"May 2022\",\n        \"EndDate\":\"Aug 2022\",\n        \"Location\":\"Bloomington, Indiana\",\n        \"Work\":['Worked on a project that enabled users to save and resume incomplete insurance applications through an email link, reducing the process time by **30%**.', 'Used **JavaScript** with **Ajax** framework to create fast and dynamic front-end for web pages. Utilized **.NET** framework for back-end.', 'Utilized **Entity Framework** ORM to efficiently perform Create, Read, Update, and Delete (CRUD) operations on insurance plans data stored in **PostgreSQL** databases.'],\n      },\n      {\n        \"CompanyName\":\"Siddhivinayak Aesthetics Pvt. Ltd\",\n        \"specialization\":\"Software Engineer Intern\",\n        \"StartDate\":\"Jan 2021\",\n        \"EndDate\":\"May 2021\",\n        \"Location\":\"Pune, India\",\n        \"Work\":['Developed an agile, software-driven application to automate and improve quality assurance for painted auto parts, replacing the pen-and-paper method.', 'Designed a two-app system comprising an **Android** app for data entry by inspectors and a **React** web dashboard to manage activities, monitor parts, and calculate rejection rates for informed quality decisions.', 'Improved the efficiency of the quality assurance cycle. Reduced quality control response time from 6 days to less than **2 days**.'],\n      }\n    ],\n    \"skillsDescription\":\"Your skills here\",\n    \"skills\":[\n      {\n        \"skillname\":\"HTML5\"\n      },\n      {\n        \"skillname\":\"CSS\"\n      },\n      {\n        \"skillname\":\"Reactjs\"\n      }\n    ],\n    \"projects\":[\n      {\n        \"name\":\"Distributed Map Reduce\",\n        \"Date\": \"October 2022\",\n        \"description\":[\"Implemented a distributed **Map Reduce** system from scratch, utilizing **Python** scripting to provision VM instances on **Google Cloud**, establish inter-communication, and transfer data and execution files.\",\"Incorporated fault tolerance mechanisms, including a distributed database and server heartbeat checkup, to ensure reliable operation.\",\"Developed a user-friendly front-end interface for data input, initiation and monitoring of Map Reduce processes, and result visualization.\"],\n        \"github\" : \"https://github.com/ParitoshSabade/DistributedMapReduce\",\n        \n      },\n      {\n        \"name\":\"Event Reservation System\",\n        \"Date\": \"October 2021\",\n        \"description\":[\"Designed and developed a web application for wedding management. Developed features such as booking a venue, scheduling a wedding, managing the guest-list, and adding venues to host weddings using the application.\",\"Utilized **Agile Methodology** for effective project management and seamless implementation of the project.\",\"Used **React** for front-end development, **Flask** for back-end development, and **Heroku** for deployment.\"],\n        \"github\" : \"https://github.com/ParitoshSabade/Wedding-Reservation-System\",\n      },\n      {\n        \"name\":\"Tetris Bot Project\",\n        \"Date\": \"November 2021\",\n        \"description\":[\"Developed an AI bot to play the Tetris game. Deduced a cost function using features like bumpiness, average height, holes to calculate the best position for the falling piece.\",\"Used probabilistic inference to predict the next falling piece.\",\" Reached a maximum score of around 3000.\"],\n        \"github\" : \"https://github.com/ParitoshSabade/CSCI-551-Elements-of-AI/tree/master/Assignment%202/part2\",\n      },\n      {\n        \"name\":\"Restaurant Management System \",\n        \"Date\": \"July 2018\",\n        \"description\":[\"Developed an Android app to manage Restaurants, automating most of the manual work.\",\"The application is capable of displaying menu, taking orders, communicating the order to the kitchen, generating bill and payment.\",\"Minimized the manpower required in restaurants by almost **40 percent**. Earned an appreciation letter from a restaurant where this application was practically implemented.\"],\n        \"github\" : \"https://github.com/ParitoshSabade/RestaurantManagementApp-Main\",\n      \n      }\n    ],\n    \"testimonials\":[\n      {\n        \"description\":\"This is a sample testimonial\",\n        \"name\":\"Some technical guy\"\n      },\n      {\n        \"description\":\"This is a sample testimonial\",\n        \"name\":\"Some technical guy\"\n      }\n    ],\n    \"Skills\": [\n      \n      \"**Programming Languages:** Python, C#, Java, C++, JavaScript, HTML/CSS.\",\n      \"**Frameworks:** Flask, Django, React, .NET, Node.js, Entity Framework.\",\n      \"**Cloud:** AWS (EC2, S3, RDS), GCP (Compute Engine, Cloud Storage, Cloud Functions).\",\n      \"**Tools:** Git, JIRA, Docker, Kubernetes, Bitbucket, SourceTree, Jenkins, Selenium.\",\n      \n    \n  ]\n  }\n  \n  export default resumeData","import React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nexport default  class Experience extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"experience\">\n\n        \n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.StartDate}-{item.EndDate}</em></p>\n                          <p>\n                          <ul>\n                                {item.Work.map((subitem, index) => (\n                                    <li key={index} style={{ listStyle: 'disc', color: '#3d3d3d',fontFamily: \"'opensans-regular', sans-serif\",fontSize:\"15px\",fontWeight:\"normal\",lineHeight:\"30px\"}}>\n                                    \n                                    <ReactMarkdown>{subitem}</ReactMarkdown></li>\n                                ))}\n                                </ul>\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n        \n\n        \n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nexport default  class Experience extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    \n    return (\n      <section id=\"skills\">\n\n        \n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                  resumeData.Skills.map((item) => {\n                    return(\n                        <p>\n                            <ul>\n                            <li  style={{ listStyle: 'disc', color: '#3d3d3d',fontFamily: \"'opensans-regular', sans-serif\",fontSize:\"15px\",fontWeight:\"normal\",lineHeight:\"15px\"}}>\n                                    <ReactMarkdown>{item}</ReactMarkdown>\n                                    </li>\n                            </ul>\n                        </p>\n                    )\n                  })\n              }\n            </div> \n         </div>\n\n\n        \n\n        \n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Education from './components/Education';\nimport Projects from './components/Projects';\nimport Testimonials from  './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nimport Experience from './components/Experience';\nimport Skills from './components/Skills';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Education resumeData={resumeData}/>\n        <Experience resumeData={resumeData}/>\n        <Projects resumeData={resumeData}/>\n        <Skills resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}